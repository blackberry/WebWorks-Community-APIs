{
  "author": {
    "name": "Larry Myers"
  },
  "name": "jasmine-reporters",
  "description": "Reporters for the Jasmine BDD Framework",
  "version": "0.2.1",
  "homepage": "https://github.com/larrymyers/jasmine-reporters",
  "maintainers": "Ben Loveridge <bloveridge@movenetworks.com>",
  "repository": {
    "type": "git",
    "url": "git://github.com/larrymyers/jasmine-reporters.git"
  },
  "main": "./src/load_reporters.js",
  "dependencies": {},
  "devDependencies": {},
  "readme": "# Jasmine Reporters\n\nJasmine Reporters is a collection of javascript jasmine.Reporter classes that can be used with\nthe [JasmineBDD testing framework](http://pivotal.github.com/jasmine/).\n\nRight now the project is focused on two new reporters:\n\n* ConsoleReporter - Report test results to the browser console.\n* JUnitXmlReporter - Report test results to a file (using Rhino or PyPhantomJS) in JUnit XML Report format.\n\n## Usage\n\nExamples are included in the test directory that show how to use the reporters,\nas well a basic runner scripts for Rhino + envjs, and a basic runner for \n[PhantomJS](https://github.com/ariya/phantomjs) (using PyPhantomJS and the\nsaveToFile plugin). Either of these methods could be used in a Continuous\nIntegration project for running headless tests and generating JUnit XML output.\n\n### Rhino + EnvJS\n\nEverything needed to run the tests in Rhino + EnvJS is included in this\nrepository inside the `ext` directory, specifically Rhino 1.7r2 and envjs 1.2\nfor Rhino.\n\n### PhantomJS, PyPhantomJS\n\nPhantomJS is included as a submodule inside the `ext` directory. The included\nexample runner makes use of PyPhantomJS to execute the headless tests and\nsave XML output to the filesystem.\n\nWhile PhantomJS and PyPhantomJS both run on MacOS / Linux / Windows, there are\nspecific dependencies for each platform. Specifics on installing these are not\nincluded here, but is left as an exercise for the reader. The [PhantomJS](https://github.com/ariya/phantomjs)\nproject contains links to various documentation, including installation notes.\n\nHere is how I got it working in MacOSX 10.6 (YMMV):\n\n* ensure you are using Python 2.6+\n* install Xcode (this gives you make, et al)\n* install qt (this gives you qmake, et al)\n  * this may be easiest via [homebrew](https://github.com/mxcl/homebrew)\n  * `brew install qt`\n* install the python sip module\n  * `pip install sip # this will fail to fully install sip, keep going`\n  * `cd build/sip`\n  * `python configure.py`\n  * `make && sudo make install`\n* install the python pyqt module\n  * `pip install pyqt # this will fail to fully install pyqt, keep going`\n  * `cd build/pyqt`\n  * `python configure.py`\n  * `make && sudo make install`\n",
  "readmeFilename": "README.markdown",
  "_id": "jasmine-reporters@0.2.1",
  "_from": "jasmine-reporters@>=0.2.0"
}
